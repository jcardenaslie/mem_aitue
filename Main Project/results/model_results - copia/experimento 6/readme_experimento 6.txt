{'readme': {'experiment_name': 'experimento 6', 'experiment_dataset': 'personas_cotizacion4.csv', 'personas_shape': (6184, 34), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_col_drop': ['Unnamed: 0', 'rut', 'negocio', 'max_rango_edad', 'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'loc_comuna', 'loc_provincia', 'loc_region', 'nro_proyectos',
       'profesion', 'sexo', 'tipo_cliente'],
      dtype='object'), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'loc_comuna', 'loc_provincia', 'loc_region', 'nro_proyectos',
       'profesion', 'sexo', 'tipo_cliente'],
      dtype='object'), 'personas_dummies_shape': (3816, 150), 'personas_negocio': (837,), 'personas_nonegocio': (2979,), 'x_train_shape': (2671, 150), 'y_train_shape': (2671,), 'x_test_shape': (1145, 150), 'y_test_shape': (1145,), 'model': {'PRT_LR': {'conf_matrix': array([[746, 143],
       [ 78, 178]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.84      0.87       889\n       True       0.55      0.70      0.62       256\n\navg / total       0.83      0.81      0.81      1145\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=7, p=2,
           weights='uniform'), 'best_score': 0.8461740041928721, 'conf_matrix': array([[833,  56],
       [135, 121]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.94      0.90       889\n       True       0.68      0.47      0.56       256\n\navg / total       0.82      0.83      0.82      1145\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.05179474679231213, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.8574423480083857, 'conf_matrix': array([[826,  63],
       [118, 138]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.88      0.93      0.90       889\n       True       0.69      0.54      0.60       256\n\navg / total       0.83      0.84      0.83      1145\n'}, 'ULR': {'conf_matrix': array([[826,  63],
       [119, 137]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.93      0.90       889\n       True       0.69      0.54      0.60       256\n\navg / total       0.83      0.84      0.83      1145\n'}, 'BLR': {'conf_matrix': array([[723, 166],
       [ 75, 181]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.81      0.86       889\n       True       0.52      0.71      0.60       256\n\navg / total       0.82      0.79      0.80      1145\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=11,
            max_features=28, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=7, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8569182389937107, 'conf_matrix': array([[823,  66],
       [121, 135]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.93      0.90       889\n       True       0.67      0.53      0.59       256\n\navg / total       0.83      0.84      0.83      1145\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=21, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=2, min_samples_split=5,
            min_weight_fraction_leaf=0.0, n_estimators=70, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.8592767295597484, 'conf_matrix': array([[832,  57],
       [123, 133]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.94      0.90       889\n       True       0.70      0.52      0.60       256\n\navg / total       0.83      0.84      0.83      1145\n'}, 'BRF': {'conf_matrix': array([[723, 166],
       [ 75, 181]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.81      0.86       889\n       True       0.52      0.71      0.60       256\n\navg / total       0.82      0.79      0.80      1145\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.8626834381551363, 'conf_matrix': array([[826,  63],
       [110, 146]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.88      0.93      0.91       889\n       True       0.70      0.57      0.63       256\n\navg / total       0.84      0.85      0.84      1145\n'}}, 'time_exec': 648.491575717926}}