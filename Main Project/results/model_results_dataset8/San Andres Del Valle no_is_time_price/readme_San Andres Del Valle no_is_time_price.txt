{'readme': {'experiment_name': 'San Andres Del Valle no_is_time_price', 'experiment_dataset': 'personas_cotizacion8.csv', 'personas_shape': (6155, 47), 'personas_columns': ['Unnamed: 0', 'actividad', 'compra', 'is_apellido1', 'is_apellido2', 'is_celular', 'is_descuento', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_presencial', 'is_profesion', 'is_recontacto', 'is_remoto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'precio_cotizacion_media', 'precio_cotizacion_median', 'precio_cotizacion_std', 'rut', 'sexo', 'tiempo_cotizacion_media', 'tiempo_cotizacion_median', 'tiempo_cotizacion_std', 'tipo_cliente', 'valid_rut', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_recontacto', 'is_remoto', 'is_descuento', 'valid_rut', 'loc_comuna',
       'loc_provincia', 'loc_region', 'sexo', 'tipo_cliente', 'mean_cot_bod',
       'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial',
       'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'precio_cotizacion_media', 'precio_cotizacion_median',
       'precio_cotizacion_std', 'tiempo_cotizacion_media',
       'tiempo_cotizacion_median', 'tiempo_cotizacion_std', 'Altos del Valle',
       'Edificio Urban 1470', 'Edificio Mil610', 'Edificio Junge'],
      dtype='object'), 'personas_predictors_shape': (3799, 29), 'personas_predictors': Index(['is_recontacto', 'is_remoto', 'is_descuento', 'valid_rut', 'loc_comuna',
       'loc_provincia', 'loc_region', 'sexo', 'tipo_cliente', 'mean_cot_bod',
       'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial',
       'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'precio_cotizacion_media', 'precio_cotizacion_median',
       'precio_cotizacion_std', 'tiempo_cotizacion_media',
       'tiempo_cotizacion_median', 'tiempo_cotizacion_std', 'Altos del Valle',
       'Edificio Urban 1470', 'Edificio Mil610', 'Edificio Junge'],
      dtype='object'), 'personas_dummies_shape': (3799, 55), 'personas_negocio': (235,), 'personas_nonegocio': (3564,), 'x_train_shape': (2659, 55), 'y_train_shape': (2659,), 'x_test_shape': (1140, 55), 'y_test_shape': (1140,), 'model': {'PRT_BLR': {'conf_matrix': array([[873, 212],
       [ 16,  39]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.98      0.80      0.88      1085\n       True       0.16      0.71      0.25        55\n\navg / total       0.94      0.80      0.85      1140\n'}, 'KNN': {'best_score': 0.9384048433798368, 'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=13, p=2,
           weights='uniform'), 'conf_matrix': array([[1085,    0],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.98      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'PCAKNN': {'best_score': 0.9381416162147934, 'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=1e-05, class_weight='balanced', dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'conf_matrix': array([[1085,    0],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.98      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'ULR': {'conf_matrix': array([[1085,    0],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.98      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'BLR': {'conf_matrix': array([[1085,    0],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.98      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'UDT': {'best_score': 0.9397209792050539, 'name': 'UDT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=4,
            max_features=5, max_leaf_nodes=None, min_impurity_decrease=0.0,
            min_impurity_split=None, min_samples_leaf=2,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best'), 'conf_matrix': array([[1084,    1],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.97      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'URF': {'best_score': 0.9386680705448802, 'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight='balanced',
            criterion='entropy', max_depth=18, max_features=9,
            max_leaf_nodes=None, min_impurity_decrease=0.0,
            min_impurity_split=None, min_samples_leaf=5,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
            verbose=0, warm_start=False), 'conf_matrix': array([[1085,    0],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.98      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'BRF': {'best_score': 0.9249802579626217, 'name': 'BRF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight='balanced',
            criterion='entropy', max_depth=16, max_features=29,
            max_leaf_nodes=None, min_impurity_decrease=0.0,
            min_impurity_split=None, min_samples_leaf=2,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
            verbose=0, warm_start=False), 'conf_matrix': array([[1085,    0],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.98      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'SVM': {'best_score': 0.9381416162147934, 'name': 'SVM', 'best_estimator': SVC(C=0.001, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=True, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'conf_matrix': array([[1085,    0],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.98      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}, 'XGB': {'best_score': 0.9323053779616397, 'name': 'XGB', 'best_estimator': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
       colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,
       max_depth=2, min_child_weight=1, missing=None, n_estimators=50,
       n_jobs=1, nthread=None, objective='binary:logistic', random_state=0,
       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
       silent=True, subsample=1), 'conf_matrix': array([[1084,    1],
       [  55,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      1.00      0.97      1085\n       True       0.00      0.00      0.00        55\n\navg / total       0.91      0.95      0.93      1140\n'}}, 'time_exec': 1027.0580372810364}}