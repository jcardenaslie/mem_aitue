{'readme': {'experiment_name': 'All Proyects no_is', 'experiment_dataset': 'personas_cotizacion7.csv', 'personas_shape': (6183, 42), 'personas_columns': ['Unnamed: 0', 'actividad', 'compra', 'is_apellido1', 'is_apellido2', 'is_celular', 'is_descuento', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_presencial', 'is_profesion', 'is_recontacto', 'is_remoto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'valid_rut', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['loc_comuna', 'loc_provincia', 'loc_region', 'is_descuento',
       'is_presencial', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'is_remoto', 'nro_cot_bod', 'nro_cot_depto',
       'valid_rut', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos',
       'is_recontacto', 'sexo', 'tipo_cliente', 'medio_inicial',
       'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle',
       'Edificio Mil610', 'Edificio Junge'],
      dtype='object'), 'personas_predictors_shape': (6183, 25), 'personas_predictors': Index(['loc_comuna', 'loc_provincia', 'loc_region', 'is_descuento',
       'is_presencial', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'is_remoto', 'nro_cot_bod', 'nro_cot_depto',
       'valid_rut', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos',
       'is_recontacto', 'sexo', 'tipo_cliente', 'medio_inicial',
       'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle',
       'Edificio Mil610', 'Edificio Junge'],
      dtype='object'), 'personas_dummies_shape': (6183, 51), 'personas_negocio': (1100,), 'personas_nonegocio': (5083,), 'x_train_shape': (4328, 51), 'y_train_shape': (4328,), 'x_test_shape': (1855, 51), 'y_test_shape': (1855,), 'model': {'PRT_BLR': {'conf_matrix': array([[1219,  278],
       [ 100,  258]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.81      0.87      1497\n       True       0.48      0.72      0.58       358\n\navg / total       0.84      0.80      0.81      1855\n'}, 'KNN': {'best_score': 0.8356784732330584, 'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=17, p=2,
           weights='uniform'), 'conf_matrix': array([[1217,  280],
       [ 115,  243]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.81      0.86      1497\n       True       0.46      0.68      0.55       358\n\navg / total       0.83      0.79      0.80      1855\n'}, 'PCAKNN': {'best_score': 0.8596150735888727, 'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=19306.977288832535, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'conf_matrix': array([[639, 858],
       [ 85, 273]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.88      0.43      0.58      1497\n       True       0.24      0.76      0.37       358\n\navg / total       0.76      0.49      0.54      1855\n'}, 'ULR': {'conf_matrix': array([[1450,   47],
       [ 235,  123]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.97      0.91      1497\n       True       0.72      0.34      0.47       358\n\navg / total       0.83      0.85      0.83      1855\n'}, 'BLR': {'conf_matrix': array([[1209,  288],
       [ 102,  256]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.81      0.86      1497\n       True       0.47      0.72      0.57       358\n\navg / total       0.84      0.79      0.80      1855\n'}, 'UDT': {'best_score': 0.8604237425198124, 'name': 'UDT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=7,
            max_features=29, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'conf_matrix': array([[1455,   42],
       [ 208,  150]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.97      0.92      1497\n       True       0.78      0.42      0.55       358\n\navg / total       0.86      0.87      0.85      1855\n'}, 'URF': {'best_score': 0.8602620087336245, 'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=7, max_features=9, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'conf_matrix': array([[1457,   40],
       [ 227,  131]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.97      0.92      1497\n       True       0.77      0.37      0.50       358\n\navg / total       0.85      0.86      0.83      1855\n'}, 'BRF': {'conf_matrix': array([[1209,  288],
       [ 102,  256]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.81      0.86      1497\n       True       0.47      0.72      0.57       358\n\navg / total       0.84      0.79      0.80      1855\n'}, 'SVM': {'best_score': 0.8220928351932719, 'name': 'SVM', 'best_estimator': SVC(C=0.01, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=True, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'conf_matrix': array([[1497,    0],
       [ 358,    0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.81      1.00      0.89      1497\n       True       0.00      0.00      0.00       358\n\navg / total       0.65      0.81      0.72      1855\n'}, 'XGB': {'best_score': 0.8648336414048059, 'name': 'XGB', 'best_estimator': XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
       colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,
       max_depth=4, min_child_weight=1, missing=None, n_estimators=50,
       n_jobs=1, nthread=None, objective='binary:logistic', random_state=0,
       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
       silent=True, subsample=1), 'conf_matrix': array([[1442,   55],
       [ 228,  130]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.96      0.91      1497\n       True       0.70      0.36      0.48       358\n\navg / total       0.83      0.85      0.83      1855\n'}}, 'time_exec': 2629.3565838336945}}