{'readme': {'experiment_name': 'San Andres del Valle Experimento 3', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'Edificio Mil610', 'Edificio Junge', 'profesion',
       'sexo', 'tipo_cliente', 'loc_comuna', 'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_predictors_shape': (3816, 29), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'Edificio Mil610', 'Edificio Junge', 'profesion',
       'sexo', 'tipo_cliente', 'loc_comuna', 'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_dummies_shape': (3816, 163), 'personas_negocio': (837,), 'personas_nonegocio': (2979,), 'x_train_shape': (2671, 163), 'y_train_shape': (2671,), 'x_test_shape': (1145, 163), 'y_test_shape': (1145,), 'model': {'PRT_LR': {'conf_matrix': array([[754, 135],
       [ 63, 193]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.85      0.88       889\n       True       0.59      0.75      0.66       256\n\navg / total       0.85      0.83      0.83      1145\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=9, p=2,
           weights='uniform'), 'best_score': 0.8566561844863732, 'conf_matrix': array([[839,  50],
       [116, 140]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.88      0.94      0.91       889\n       True       0.74      0.55      0.63       256\n\navg / total       0.85      0.86      0.85      1145\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.8747379454926625, 'conf_matrix': array([[840,  49],
       [106, 150]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.94      0.92       889\n       True       0.75      0.59      0.66       256\n\navg / total       0.86      0.86      0.86      1145\n'}, 'ULR': {'conf_matrix': array([[833,  56],
       [106, 150]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.94      0.91       889\n       True       0.73      0.59      0.65       256\n\navg / total       0.85      0.86      0.85      1145\n'}, 'BLR': {'conf_matrix': array([[754, 135],
       [ 65, 191]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.85      0.88       889\n       True       0.59      0.75      0.66       256\n\navg / total       0.85      0.83      0.83      1145\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=15,
            max_features=28, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=4, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8718553459119497, 'conf_matrix': array([[829,  60],
       [103, 153]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.93      0.91       889\n       True       0.72      0.60      0.65       256\n\navg / total       0.85      0.86      0.85      1145\n'}, 'BDT': {'name': 'BDT', 'best_estimator': DecisionTreeClassifier(class_weight='balanced', criterion='gini', max_depth=3,
            max_features=20, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8425052410901468, 'conf_matrix': array([[823,  66],
       [148, 108]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.85      0.93      0.88       889\n       True       0.62      0.42      0.50       256\n\navg / total       0.80      0.81      0.80      1145\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=28, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=2, min_samples_split=14,
            min_weight_fraction_leaf=0.0, n_estimators=70, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.8773584905660378, 'conf_matrix': array([[854,  35],
       [112, 144]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.88      0.96      0.92       889\n       True       0.80      0.56      0.66       256\n\navg / total       0.87      0.87      0.86      1145\n'}, 'BRF': {'conf_matrix': array([[754, 135],
       [ 65, 191]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.85      0.88       889\n       True       0.59      0.75      0.66       256\n\navg / total       0.85      0.83      0.83      1145\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=1, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.850104821802935, 'conf_matrix': array([[795,  94],
       [105, 151]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.88      0.89      0.89       889\n       True       0.62      0.59      0.60       256\n\navg / total       0.82      0.83      0.82      1145\n'}}, 'time_exec': 1102.110600233078}}