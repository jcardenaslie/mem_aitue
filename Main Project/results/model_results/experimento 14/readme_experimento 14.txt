{'readme': {'experiment_name': 'experimento 14', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_col_drop': ['Unnamed: 0', 'rut', 'negocio', 'max_rango_edad', 'is_profesion'], 'personas_after_drop_columns': Index(['loc_comuna', 'loc_provincia', 'loc_region', 'medio_inicial',
       'nro_proyectos', 'profesion', 'sexo', 'tipo_cliente'],
      dtype='object'), 'personas_predictors_shape': (1519, 8), 'personas_predictors': Index(['loc_comuna', 'loc_provincia', 'loc_region', 'medio_inicial',
       'nro_proyectos', 'profesion', 'sexo', 'tipo_cliente'],
      dtype='object'), 'personas_dummies_shape': (1519, 149), 'personas_negocio': (547,), 'personas_nonegocio': (972,), 'x_train_shape': (1063, 149), 'y_train_shape': (1063,), 'x_test_shape': (456, 149), 'y_test_shape': (456,), 'model': {'PRT_LR': {'conf_matrix': array([[191,  96],
       [ 82,  87]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.70      0.67      0.68       287\n       True       0.48      0.51      0.49       169\n\navg / total       0.62      0.61      0.61       456\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=4, p=2,
           weights='uniform'), 'best_score': 0.6445029624753127, 'conf_matrix': array([[257,  30],
       [148,  21]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.63      0.90      0.74       287\n       True       0.41      0.12      0.19       169\n\navg / total       0.55      0.61      0.54       456\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=3.727593720314938, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.6589861751152074, 'conf_matrix': array([[244,  43],
       [120,  49]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.67      0.85      0.75       287\n       True       0.53      0.29      0.38       169\n\navg / total       0.62      0.64      0.61       456\n'}, 'ULR': {'conf_matrix': array([[244,  43],
       [120,  49]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.67      0.85      0.75       287\n       True       0.53      0.29      0.38       169\n\navg / total       0.62      0.64      0.61       456\n'}, 'BLR': {'conf_matrix': array([[183, 104],
       [ 76,  93]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.71      0.64      0.67       287\n       True       0.47      0.55      0.51       169\n\navg / total       0.62      0.61      0.61       456\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=16,
            max_features=10, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.663594470046083, 'conf_matrix': array([[253,  34],
       [136,  33]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.65      0.88      0.75       287\n       True       0.49      0.20      0.28       169\n\navg / total       0.59      0.63      0.57       456\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=22, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=2, min_samples_split=23,
            min_weight_fraction_leaf=0.0, n_estimators=40, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.663594470046083, 'conf_matrix': array([[261,  26],
       [142,  27]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.65      0.91      0.76       287\n       True       0.51      0.16      0.24       169\n\navg / total       0.60      0.63      0.57       456\n'}, 'BRF': {'conf_matrix': array([[183, 104],
       [ 76,  93]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.71      0.64      0.67       287\n       True       0.47      0.55      0.51       169\n\navg / total       0.62      0.61      0.61       456\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=10, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.001, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.6181698485845951, 'conf_matrix': array([[231,  56],
       [105,  64]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.69      0.80      0.74       287\n       True       0.53      0.38      0.44       169\n\navg / total       0.63      0.65      0.63       456\n'}}, 'time_exec': 241.73182439804077}}