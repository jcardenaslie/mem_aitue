{'readme': {'experiment_name': 'Altos del Valle NN base_minusisprofesion', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'loc_comuna', 'loc_provincia', 'loc_region', 'mean_cot_bod',
       'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'nro_cot_bod',
       'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos',
       'sexo', 'tipo_cliente', 'Edificio Urban 1470', 'San Andres Del Valle',
       'Edificio Mil610', 'Edificio Junge', 'profesion'],
      dtype='object'), 'personas_predictors_shape': (125, 28), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'loc_comuna', 'loc_provincia', 'loc_region', 'mean_cot_bod',
       'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'nro_cot_bod',
       'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos',
       'sexo', 'tipo_cliente', 'Edificio Urban 1470', 'San Andres Del Valle',
       'Edificio Mil610', 'Edificio Junge', 'profesion'],
      dtype='object'), 'personas_dummies_shape': (125, 172), 'personas_negocio': (59,), 'personas_nonegocio': (66,), 'x_train_shape': (87, 172), 'y_train_shape': (87,), 'x_test_shape': (38, 172), 'y_test_shape': (38,), 'model': {'PRT_BLR': {'conf_matrix': array([[16,  5],
       [ 6, 11]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.73      0.76      0.74        21\n       True       0.69      0.65      0.67        17\n\navg / total       0.71      0.71      0.71        38\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform'), 'best_score': 0.736, 'conf_matrix': array([[16,  5],
       [ 5, 12]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.76      0.76      0.76        21\n       True       0.71      0.71      0.71        17\n\navg / total       0.74      0.74      0.74        38\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.76, 'conf_matrix': array([[19,  2],
       [ 5, 12]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.79      0.90      0.84        21\n       True       0.86      0.71      0.77        17\n\navg / total       0.82      0.82      0.81        38\n'}, 'ULR': {'conf_matrix': array([[18,  3],
       [ 5, 12]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.78      0.86      0.82        21\n       True       0.80      0.71      0.75        17\n\navg / total       0.79      0.79      0.79        38\n'}, 'BLR': {'conf_matrix': array([[19,  2],
       [ 5, 12]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.79      0.90      0.84        21\n       True       0.86      0.71      0.77        17\n\navg / total       0.82      0.82      0.81        38\n'}, 'UDT': {'name': 'UDT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=9,
            max_features=18, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=2, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8, 'conf_matrix': array([[17,  4],
       [11,  6]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.61      0.81      0.69        21\n       True       0.60      0.35      0.44        17\n\navg / total       0.60      0.61      0.58        38\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=False, class_weight=None, criterion='gini',
            max_depth=12, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=6, min_samples_split=6,
            min_weight_fraction_leaf=0.0, n_estimators=60, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.8, 'conf_matrix': array([[15,  6],
       [ 6, 11]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.71      0.71      0.71        21\n       True       0.65      0.65      0.65        17\n\navg / total       0.68      0.68      0.68        38\n'}, 'BRF': {'conf_matrix': array([[19,  2],
       [ 5, 12]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.79      0.90      0.84        21\n       True       0.86      0.71      0.77        17\n\navg / total       0.82      0.82      0.81        38\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=1, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=True, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.744, 'conf_matrix': array([[17,  4],
       [ 6, 11]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.74      0.81      0.77        21\n       True       0.73      0.65      0.69        17\n\navg / total       0.74      0.74      0.73        38\n'}}, 'time_exec': 160.86925601959229}}