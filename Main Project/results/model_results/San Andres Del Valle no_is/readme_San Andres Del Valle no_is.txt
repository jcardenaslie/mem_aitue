{'readme': {'experiment_name': 'San Andres Del Valle no_is', 'experiment_dataset': 'personas_cotizacion7.csv', 'personas_shape': (6183, 42), 'personas_columns': ['Unnamed: 0', 'actividad', 'compra', 'is_apellido1', 'is_apellido2', 'is_celular', 'is_descuento', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_presencial', 'is_profesion', 'is_recontacto', 'is_remoto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'valid_rut', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['actividad', 'loc_comuna', 'loc_provincia', 'loc_region',
       'is_descuento', 'is_presencial', 'mean_cot_bod', 'mean_cot_depto',
       'mean_cot_esta', 'mean_cot_estu', 'is_remoto', 'nro_cot_bod',
       'nro_cot_depto', 'valid_rut', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'is_recontacto', 'sexo', 'tipo_cliente',
       'medio_inicial', 'Altos del Valle', 'Edificio Urban 1470',
       'Edificio Mil610', 'Edificio Junge'],
      dtype='object'), 'personas_predictors_shape': (3816, 25), 'personas_predictors': Index(['actividad', 'loc_comuna', 'loc_provincia', 'loc_region',
       'is_descuento', 'is_presencial', 'mean_cot_bod', 'mean_cot_depto',
       'mean_cot_esta', 'mean_cot_estu', 'is_remoto', 'nro_cot_bod',
       'nro_cot_depto', 'valid_rut', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'is_recontacto', 'sexo', 'tipo_cliente',
       'medio_inicial', 'Altos del Valle', 'Edificio Urban 1470',
       'Edificio Mil610', 'Edificio Junge'],
      dtype='object'), 'personas_dummies_shape': (3816, 57), 'personas_negocio': (837,), 'personas_nonegocio': (2979,), 'x_train_shape': (2671, 57), 'y_train_shape': (2671,), 'x_test_shape': (1145, 57), 'y_test_shape': (1145,), 'model': {'PRT_BLR': {'conf_matrix': array([[707, 182],
       [ 65, 191]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.80      0.85       889\n       True       0.51      0.75      0.61       256\n\navg / total       0.83      0.78      0.80      1145\n'}, 'KNN': {}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'conf_matrix': array([[  1, 888],
       [  0, 256]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       1.00      0.00      0.00       889\n       True       0.22      1.00      0.37       256\n\navg / total       0.83      0.22      0.08      1145\n'}, 'ULR': {'conf_matrix': array([[842,  47],
       [148, 108]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.85      0.95      0.90       889\n       True       0.70      0.42      0.53       256\n\navg / total       0.82      0.83      0.81      1145\n'}, 'BLR': {'conf_matrix': array([[703, 186],
       [ 75, 181]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.90      0.79      0.84       889\n       True       0.49      0.71      0.58       256\n\navg / total       0.81      0.77      0.78      1145\n'}, 'UDT': {'name': 'UDT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=4,
            max_features=28, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=5, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'conf_matrix': array([[846,  43],
       [151, 105]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.85      0.95      0.90       889\n       True       0.71      0.41      0.52       256\n\navg / total       0.82      0.83      0.81      1145\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=12, max_features=16, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=8, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=10, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'conf_matrix': array([[848,  41],
       [123, 133]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.95      0.91       889\n       True       0.76      0.52      0.62       256\n\navg / total       0.85      0.86      0.85      1145\n'}, 'BRF': {'conf_matrix': array([[703, 186],
       [ 75, 181]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.90      0.79      0.84       889\n       True       0.49      0.71      0.58       256\n\navg / total       0.81      0.77      0.78      1145\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=10, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=True, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'conf_matrix': array([[748, 141],
       [ 53, 203]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.93      0.84      0.89       889\n       True       0.59      0.79      0.68       256\n\navg / total       0.86      0.83      0.84      1145\n'}}, 'time_exec': 481.60252022743225}}