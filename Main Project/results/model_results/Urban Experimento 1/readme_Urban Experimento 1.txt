{'readme': {'experiment_name': 'Urban Experimento 1', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_predictors_shape': (1365, 30), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_dummies_shape': (1365, 128), 'personas_negocio': (152,), 'personas_nonegocio': (1213,), 'x_train_shape': (955, 128), 'y_train_shape': (955,), 'x_test_shape': (410, 128), 'y_test_shape': (410,), 'model': {'PRT_LR': {'conf_matrix': array([[324,  45],
       [  7,  34]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.98      0.88      0.93       369\n       True       0.43      0.83      0.57        41\n\navg / total       0.92      0.87      0.89       410\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=8, p=2,
           weights='uniform'), 'best_score': 0.9208791208791208, 'conf_matrix': array([[366,   3],
       [ 30,  11]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.92      0.99      0.96       369\n       True       0.79      0.27      0.40        41\n\navg / total       0.91      0.92      0.90       410\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.9296703296703297, 'conf_matrix': array([[362,   7],
       [ 18,  23]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      0.98      0.97       369\n       True       0.77      0.56      0.65        41\n\navg / total       0.93      0.94      0.93       410\n'}, 'ULR': {'conf_matrix': array([[357,  12],
       [ 19,  22]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      0.97      0.96       369\n       True       0.65      0.54      0.59        41\n\navg / total       0.92      0.92      0.92       410\n'}, 'BLR': {'conf_matrix': array([[323,  46],
       [ 10,  31]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.97      0.88      0.92       369\n       True       0.40      0.76      0.53        41\n\navg / total       0.91      0.86      0.88       410\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=16,
            max_features=23, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=8, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.9318681318681319, 'conf_matrix': array([[361,   8],
       [ 19,  22]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      0.98      0.96       369\n       True       0.73      0.54      0.62        41\n\navg / total       0.93      0.93      0.93       410\n'}, 'BDT': {'name': 'BDT', 'best_estimator': DecisionTreeClassifier(class_weight='balanced', criterion='gini', max_depth=3,
            max_features=28, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=7, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.9142857142857143, 'conf_matrix': array([[294,  75],
       [  9,  32]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.97      0.80      0.87       369\n       True       0.30      0.78      0.43        41\n\navg / total       0.90      0.80      0.83       410\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=False, class_weight=None, criterion='gini',
            max_depth=12, max_features='sqrt', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=13,
            min_weight_fraction_leaf=0.0, n_estimators=60, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.9252747252747253, 'conf_matrix': array([[366,   3],
       [ 26,  15]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.93      0.99      0.96       369\n       True       0.83      0.37      0.51        41\n\navg / total       0.92      0.93      0.92       410\n'}, 'BRF': {'conf_matrix': array([[323,  46],
       [ 10,  31]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.97      0.88      0.92       369\n       True       0.40      0.76      0.53        41\n\navg / total       0.91      0.86      0.88       410\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=1, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.01, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.9076923076923077, 'conf_matrix': array([[347,  22],
       [ 10,  31]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.97      0.94      0.96       369\n       True       0.58      0.76      0.66        41\n\navg / total       0.93      0.92      0.93       410\n'}}, 'time_exec': 363.25936627388}}