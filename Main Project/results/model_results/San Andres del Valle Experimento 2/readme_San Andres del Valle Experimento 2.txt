{'readme': {'experiment_name': 'San Andres del Valle Experimento 2', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_predictors_shape': (1519, 30), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_dummies_shape': (1519, 163), 'personas_negocio': (547,), 'personas_nonegocio': (972,), 'x_train_shape': (1063, 163), 'y_train_shape': (1063,), 'x_test_shape': (456, 163), 'y_test_shape': (456,), 'model': {'PRT_LR': {'conf_matrix': array([[233,  54],
       [ 24, 145]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.81      0.86       287\n       True       0.73      0.86      0.79       169\n\navg / total       0.84      0.83      0.83       456\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=7, p=2,
           weights='uniform'), 'best_score': 0.793285055957867, 'conf_matrix': array([[256,  31],
       [ 71,  98]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.78      0.89      0.83       287\n       True       0.76      0.58      0.66       169\n\navg / total       0.77      0.78      0.77       456\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.8321263989466754, 'conf_matrix': array([[255,  32],
       [ 43, 126]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.89      0.87       287\n       True       0.80      0.75      0.77       169\n\navg / total       0.83      0.84      0.83       456\n'}, 'ULR': {'conf_matrix': array([[255,  32],
       [ 38, 131]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.89      0.88       287\n       True       0.80      0.78      0.79       169\n\navg / total       0.85      0.85      0.85       456\n'}, 'BLR': {'conf_matrix': array([[234,  53],
       [ 30, 139]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.82      0.85       287\n       True       0.72      0.82      0.77       169\n\navg / total       0.83      0.82      0.82       456\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=6,
            max_features=29, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8367346938775511, 'conf_matrix': array([[263,  24],
       [ 56, 113]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.82      0.92      0.87       287\n       True       0.82      0.67      0.74       169\n\navg / total       0.82      0.82      0.82       456\n'}, 'BDT': {'name': 'BDT', 'best_estimator': DecisionTreeClassifier(class_weight='balanced', criterion='gini', max_depth=7,
            max_features=23, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=9, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8314680710994075, 'conf_matrix': array([[228,  59],
       [ 28, 141]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.79      0.84       287\n       True       0.70      0.83      0.76       169\n\navg / total       0.82      0.81      0.81       456\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=14, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=25,
            min_weight_fraction_leaf=0.0, n_estimators=40, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.8406846609611587, 'conf_matrix': array([[263,  24],
       [ 51, 118]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.84      0.92      0.88       287\n       True       0.83      0.70      0.76       169\n\navg / total       0.84      0.84      0.83       456\n'}, 'BRF': {'conf_matrix': array([[234,  53],
       [ 30, 139]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.82      0.85       287\n       True       0.72      0.82      0.77       169\n\navg / total       0.83      0.82      0.82       456\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=10, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.8097432521395656, 'conf_matrix': array([[242,  45],
       [ 40, 129]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.84      0.85       287\n       True       0.74      0.76      0.75       169\n\navg / total       0.81      0.81      0.81       456\n'}}, 'time_exec': 480.4340252876282}}