{'readme': {'experiment_name': 'Junge Experimento 2', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_predictors_shape': (103, 30), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_dummies_shape': (103, 77), 'personas_negocio': (32,), 'personas_nonegocio': (71,), 'x_train_shape': (72, 77), 'y_train_shape': (72,), 'x_test_shape': (31, 77), 'y_test_shape': (31,), 'model': {'PRT_LR': {'conf_matrix': array([[17, 10],
       [ 3,  1]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.85      0.63      0.72        27\n       True       0.09      0.25      0.13         4\n\navg / total       0.75      0.58      0.65        31\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=2, p=2,
           weights='uniform'), 'best_score': 0.7087378640776699, 'conf_matrix': array([[25,  2],
       [ 4,  0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.93      0.89        27\n       True       0.00      0.00      0.00         4\n\navg / total       0.75      0.81      0.78        31\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.7087378640776699, 'conf_matrix': array([[16, 11],
       [ 2,  2]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.59      0.71        27\n       True       0.15      0.50      0.24         4\n\navg / total       0.79      0.58      0.65        31\n'}, 'ULR': {'conf_matrix': array([[18,  9],
       [ 2,  2]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.90      0.67      0.77        27\n       True       0.18      0.50      0.27         4\n\navg / total       0.81      0.65      0.70        31\n'}, 'BLR': {'conf_matrix': array([[17, 10],
       [ 2,  2]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.63      0.74        27\n       True       0.17      0.50      0.25         4\n\navg / total       0.80      0.61      0.68        31\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=9,
            max_features=23, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=8, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.7961165048543689, 'conf_matrix': array([[15, 12],
       [ 1,  3]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.94      0.56      0.70        27\n       True       0.20      0.75      0.32         4\n\navg / total       0.84      0.58      0.65        31\n'}, 'BDT': {'name': 'BDT', 'best_estimator': DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
            max_depth=7, max_features=14, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.7766990291262136, 'conf_matrix': array([[17, 10],
       [ 4,  0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.81      0.63      0.71        27\n       True       0.00      0.00      0.00         4\n\navg / total       0.71      0.55      0.62        31\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',
            max_depth=4, max_features='log2', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=23,
            min_weight_fraction_leaf=0.0, n_estimators=40, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.7087378640776699, 'conf_matrix': array([[25,  2],
       [ 4,  0]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.93      0.89        27\n       True       0.00      0.00      0.00         4\n\navg / total       0.75      0.81      0.78        31\n'}, 'BRF': {'conf_matrix': array([[17, 10],
       [ 2,  2]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.63      0.74        27\n       True       0.17      0.50      0.25         4\n\navg / total       0.80      0.61      0.68        31\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=10, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.7281553398058253, 'conf_matrix': array([[18,  9],
       [ 2,  2]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.90      0.67      0.77        27\n       True       0.18      0.50      0.27         4\n\navg / total       0.81      0.65      0.70        31\n'}}, 'time_exec': 157.61952424049377}}