{'readme': {'experiment_name': 'All Proyects NN Experimento base', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion',
       'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region',
       'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu',
       'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'sexo', 'tipo_cliente', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge'],
      dtype='object'), 'personas_predictors_shape': (2251, 29), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion',
       'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region',
       'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu',
       'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'sexo', 'tipo_cliente', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge'],
      dtype='object'), 'personas_dummies_shape': (2251, 44), 'personas_negocio': (714,), 'personas_nonegocio': (1537,), 'x_train_shape': (1575, 44), 'y_train_shape': (1575,), 'x_test_shape': (676, 44), 'y_test_shape': (676,), 'model': {'PRT_BLR': {'conf_matrix': array([[382,  85],
       [ 40, 169]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.82      0.86       467\n       True       0.67      0.81      0.73       209\n\navg / total       0.83      0.82      0.82       676\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=9, p=2,
           weights='uniform'), 'best_score': 0.8191914704575745, 'conf_matrix': array([[424,  43],
       [ 80, 129]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.84      0.91      0.87       467\n       True       0.75      0.62      0.68       209\n\navg / total       0.81      0.82      0.81       676\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=3.727593720314938, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.8365171035095513, 'conf_matrix': array([[429,  38],
       [ 71, 138]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.92      0.89       467\n       True       0.78      0.66      0.72       209\n\navg / total       0.84      0.84      0.83       676\n'}, 'ULR': {'conf_matrix': array([[429,  38],
       [ 65, 144]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.92      0.89       467\n       True       0.79      0.69      0.74       209\n\navg / total       0.84      0.85      0.84       676\n'}, 'BLR': {'conf_matrix': array([[382,  85],
       [ 40, 169]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.82      0.86       467\n       True       0.67      0.81      0.73       209\n\navg / total       0.83      0.82      0.82       676\n'}, 'UDT': {'name': 'UDT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=8,
            max_features=28, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=6, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8449577965348734, 'conf_matrix': array([[423,  44],
       [ 68, 141]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.91      0.88       467\n       True       0.76      0.67      0.72       209\n\navg / total       0.83      0.83      0.83       676\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=28, max_features='sqrt', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=25,
            min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.8476232785428698, 'conf_matrix': array([[438,  29],
       [ 77, 132]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.85      0.94      0.89       467\n       True       0.82      0.63      0.71       209\n\navg / total       0.84      0.84      0.84       676\n'}, 'BRF': {'conf_matrix': array([[382,  85],
       [ 40, 169]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.82      0.86       467\n       True       0.67      0.81      0.73       209\n\navg / total       0.83      0.82      0.82       676\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=1, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.8165259884495779, 'conf_matrix': array([[366, 101],
       [ 44, 165]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.78      0.83       467\n       True       0.62      0.79      0.69       209\n\navg / total       0.81      0.79      0.79       676\n'}}, 'time_exec': 247.93372201919556}}