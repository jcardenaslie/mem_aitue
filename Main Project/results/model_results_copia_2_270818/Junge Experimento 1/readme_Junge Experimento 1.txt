{'readme': {'experiment_name': 'Junge Experimento 1', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_predictors_shape': (335, 30), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_dummies_shape': (335, 80), 'personas_negocio': (59,), 'personas_nonegocio': (276,), 'x_train_shape': (234, 80), 'y_train_shape': (234,), 'x_test_shape': (101, 80), 'y_test_shape': (101,), 'model': {'PRT_LR': {'conf_matrix': array([[66, 14],
       [ 2, 19]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.97      0.82      0.89        80\n       True       0.58      0.90      0.70        21\n\navg / total       0.89      0.84      0.85       101\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=9, p=2,
           weights='uniform'), 'best_score': 0.8388059701492537, 'conf_matrix': array([[79,  1],
       [19,  2]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.81      0.99      0.89        80\n       True       0.67      0.10      0.17        21\n\navg / total       0.78      0.80      0.74       101\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.8656716417910447, 'conf_matrix': array([[75,  5],
       [ 9, 12]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.94      0.91        80\n       True       0.71      0.57      0.63        21\n\navg / total       0.85      0.86      0.86       101\n'}, 'ULR': {'conf_matrix': array([[74,  6],
       [ 6, 15]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.93      0.93      0.93        80\n       True       0.71      0.71      0.71        21\n\navg / total       0.88      0.88      0.88       101\n'}, 'BLR': {'conf_matrix': array([[65, 15],
       [ 3, 18]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.96      0.81      0.88        80\n       True       0.55      0.86      0.67        21\n\navg / total       0.87      0.82      0.83       101\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=5,
            max_features=27, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=7, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8805970149253731, 'conf_matrix': array([[77,  3],
       [17,  4]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.82      0.96      0.89        80\n       True       0.57      0.19      0.29        21\n\navg / total       0.77      0.80      0.76       101\n'}, 'BDT': {'name': 'BDT', 'best_estimator': DecisionTreeClassifier(class_weight='balanced', criterion='gini', max_depth=1,
            max_features=22, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=6, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8597014925373134, 'conf_matrix': array([[69, 11],
       [ 5, 16]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.93      0.86      0.90        80\n       True       0.59      0.76      0.67        21\n\navg / total       0.86      0.84      0.85       101\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=False, class_weight=None,
            criterion='entropy', max_depth=18, max_features='log2',
            max_leaf_nodes=None, min_impurity_decrease=0.0,
            min_impurity_split=None, min_samples_leaf=1,
            min_samples_split=8, min_weight_fraction_leaf=0.0,
            n_estimators=20, n_jobs=1, oob_score=False, random_state=None,
            verbose=0, warm_start=False), 'best_score': 0.8597014925373134, 'conf_matrix': array([[76,  4],
       [11, 10]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.95      0.91        80\n       True       0.71      0.48      0.57        21\n\navg / total       0.84      0.85      0.84       101\n'}, 'BRF': {'conf_matrix': array([[65, 15],
       [ 3, 18]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.96      0.81      0.88        80\n       True       0.55      0.86      0.67        21\n\navg / total       0.87      0.82      0.83       101\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=10, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.01, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.8537313432835821, 'conf_matrix': array([[67, 13],
       [ 2, 19]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.97      0.84      0.90        80\n       True       0.59      0.90      0.72        21\n\navg / total       0.89      0.85      0.86       101\n'}}, 'time_exec': 174.74593138694763}}