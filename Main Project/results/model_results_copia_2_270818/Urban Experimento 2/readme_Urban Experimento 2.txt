{'readme': {'experiment_name': 'Urban Experimento 2', 'experiment_dataset': 'personas_cotizacion6.csv', 'personas_shape': (6184, 36), 'personas_columns': ['Unnamed: 0', 'is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_profesion', 'is_recontacto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_predictors_shape': (450, 30), 'personas_predictors': Index(['is_apellido1', 'is_appelido2', 'is_celular', 'is_direccion', 'is_fnac',
       'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_telefono',
       'is_profesion', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta',
       'mean_cot_estu', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta',
       'nro_cot_estu', 'nro_proyectos', 'Altos del Valle',
       'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610',
       'Edificio Junge', 'profesion', 'sexo', 'tipo_cliente', 'loc_comuna',
       'loc_provincia', 'loc_region'],
      dtype='object'), 'personas_dummies_shape': (450, 125), 'personas_negocio': (108,), 'personas_nonegocio': (342,), 'x_train_shape': (315, 125), 'y_train_shape': (315,), 'x_test_shape': (135, 125), 'y_test_shape': (135,), 'model': {'PRT_LR': {'conf_matrix': array([[92, 11],
       [ 7, 25]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.93      0.89      0.91       103\n       True       0.69      0.78      0.74        32\n\navg / total       0.87      0.87      0.87       135\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=3, p=2,
           weights='uniform'), 'best_score': 0.8422222222222222, 'conf_matrix': array([[96,  7],
       [17, 15]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.85      0.93      0.89       103\n       True       0.68      0.47      0.56        32\n\navg / total       0.81      0.82      0.81       135\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=0.4393970560760795, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l1', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.8644444444444445, 'conf_matrix': array([[98,  5],
       [14, 18]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.88      0.95      0.91       103\n       True       0.78      0.56      0.65        32\n\navg / total       0.85      0.86      0.85       135\n'}, 'ULR': {'conf_matrix': array([[98,  5],
       [18, 14]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.84      0.95      0.89       103\n       True       0.74      0.44      0.55        32\n\navg / total       0.82      0.83      0.81       135\n'}, 'BLR': {'conf_matrix': array([[89, 14],
       [11, 21]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.86      0.88       103\n       True       0.60      0.66      0.63        32\n\navg / total       0.82      0.81      0.82       135\n'}, 'DT': {'name': 'DT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=18,
            max_features=29, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=3, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.88, 'conf_matrix': array([[95,  8],
       [16, 16]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.86      0.92      0.89       103\n       True       0.67      0.50      0.57        32\n\navg / total       0.81      0.82      0.81       135\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=False, class_weight=None, criterion='gini',
            max_depth=19, max_features='sqrt', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=4, min_samples_split=23,
            min_weight_fraction_leaf=0.0, n_estimators=20, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.8688888888888889, 'conf_matrix': array([[101,   2],
       [ 19,  13]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.84      0.98      0.91       103\n       True       0.87      0.41      0.55        32\n\navg / total       0.85      0.84      0.82       135\n'}, 'BRF': {'conf_matrix': array([[89, 14],
       [11, 21]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.89      0.86      0.88       103\n       True       0.60      0.66      0.63        32\n\navg / total       0.82      0.81      0.82       135\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=10, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.8555555555555555, 'conf_matrix': array([[97,  6],
       [15, 17]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.87      0.94      0.90       103\n       True       0.74      0.53      0.62        32\n\navg / total       0.84      0.84      0.83       135\n'}, 'BDT': {'name': 'BDT', 'best_estimator': DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
            max_depth=5, max_features=25, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=7, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best'), 'best_score': 0.8644444444444445, 'conf_matrix': array([[76, 27],
       [ 4, 28]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.95      0.74      0.83       103\n       True       0.51      0.88      0.64        32\n\navg / total       0.85      0.77      0.79       135\n'}}, 'time_exec': 258.78037118911743}}