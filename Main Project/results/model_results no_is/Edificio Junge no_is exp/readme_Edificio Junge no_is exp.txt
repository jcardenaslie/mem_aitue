{'readme': {'experiment_name': 'Edificio Junge no_is exp', 'experiment_dataset': 'personas_cotizacion7.csv', 'personas_shape': (6183, 41), 'personas_columns': ['Unnamed: 0', 'actividad', 'is_apellido1', 'is_apellido2', 'is_celular', 'is_descuento', 'is_direccion', 'is_fnac', 'is_nombre', 'is_nombrecompleto', 'is_nrofam', 'is_presencial', 'is_profesion', 'is_recontacto', 'is_remoto', 'is_telefono', 'loc_comuna', 'loc_provincia', 'loc_region', 'max_rango_edad', 'mean_cot_bod', 'mean_cot_depto', 'mean_cot_esta', 'mean_cot_estu', 'medio_inicial', 'negocio', 'nro_cot_bod', 'nro_cot_depto', 'nro_cot_esta', 'nro_cot_estu', 'nro_proyectos', 'profesion', 'rut', 'sexo', 'tipo_cliente', 'valid_rut', 'Altos del Valle', 'Edificio Urban 1470', 'San Andres Del Valle', 'Edificio Mil610', 'Edificio Junge'], 'personas_after_drop_columns': Index(['actividad', 'loc_comuna', 'loc_provincia', 'loc_region',
       'is_descuento', 'is_presencial', 'mean_cot_bod', 'mean_cot_depto',
       'mean_cot_esta', 'mean_cot_estu', 'is_remoto', 'nro_cot_bod',
       'nro_cot_depto', 'valid_rut', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'is_recontacto', 'sexo', 'tipo_cliente',
       'medio_inicial', 'Altos del Valle', 'Edificio Urban 1470',
       'San Andres Del Valle', 'Edificio Mil610'],
      dtype='object'), 'personas_predictors_shape': (335, 25), 'personas_predictors': Index(['actividad', 'loc_comuna', 'loc_provincia', 'loc_region',
       'is_descuento', 'is_presencial', 'mean_cot_bod', 'mean_cot_depto',
       'mean_cot_esta', 'mean_cot_estu', 'is_remoto', 'nro_cot_bod',
       'nro_cot_depto', 'valid_rut', 'nro_cot_esta', 'nro_cot_estu',
       'nro_proyectos', 'is_recontacto', 'sexo', 'tipo_cliente',
       'medio_inicial', 'Altos del Valle', 'Edificio Urban 1470',
       'San Andres Del Valle', 'Edificio Mil610'],
      dtype='object'), 'personas_dummies_shape': (335, 57), 'personas_negocio': (59,), 'personas_nonegocio': (276,), 'x_train_shape': (234, 57), 'y_train_shape': (234,), 'x_test_shape': (101, 57), 'y_test_shape': (101,), 'model': {'PRT_BLR': {'conf_matrix': array([[62, 18],
       [ 7, 14]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.90      0.78      0.83        80\n       True       0.44      0.67      0.53        21\n\navg / total       0.80      0.75      0.77       101\n'}, 'KNN': {'name': 'KNN', 'best_estimator': KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=9, p=2,
           weights='uniform'), 'best_score': 0.826865671641791, 'conf_matrix': array([[75,  5],
       [17,  4]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.82      0.94      0.87        80\n       True       0.44      0.19      0.27        21\n\navg / total       0.74      0.78      0.75       101\n'}, 'PCAKNN': {'name': 'PCAKNN', 'best_estimator': LogisticRegression(C=3.727593720314938, class_weight=None, dual=False,
          fit_intercept=True, intercept_scaling=1, max_iter=100,
          multi_class='ovr', n_jobs=1, penalty='l2', random_state=None,
          solver='liblinear', tol=0.0001, verbose=0, warm_start=False), 'best_score': 0.8328358208955224, 'conf_matrix': array([[77,  3],
       [15,  6]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.84      0.96      0.90        80\n       True       0.67      0.29      0.40        21\n\navg / total       0.80      0.82      0.79       101\n'}, 'ULR': {'conf_matrix': array([[76,  4],
       [15,  6]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.84      0.95      0.89        80\n       True       0.60      0.29      0.39        21\n\navg / total       0.79      0.81      0.78       101\n'}, 'BLR': {'conf_matrix': array([[64, 16],
       [ 6, 15]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.80      0.85        80\n       True       0.48      0.71      0.58        21\n\navg / total       0.82      0.78      0.80       101\n'}, 'UDT': {'name': 'UDT', 'best_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=5,
            max_features=3, max_leaf_nodes=None, min_impurity_decrease=0.0,
            min_impurity_split=None, min_samples_leaf=1,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best'), 'best_score': 0.8597014925373134, 'conf_matrix': array([[78,  2],
       [19,  2]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.80      0.97      0.88        80\n       True       0.50      0.10      0.16        21\n\navg / total       0.74      0.79      0.73       101\n'}, 'URF': {'name': 'URF', 'best_estimator': RandomForestClassifier(bootstrap=False, class_weight=None, criterion='gini',
            max_depth=5, max_features='sqrt', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=2, min_samples_split=19,
            min_weight_fraction_leaf=0.0, n_estimators=20, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False), 'best_score': 0.8328358208955224, 'conf_matrix': array([[78,  2],
       [17,  4]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.82      0.97      0.89        80\n       True       0.67      0.19      0.30        21\n\navg / total       0.79      0.81      0.77       101\n'}, 'BRF': {'conf_matrix': array([[64, 16],
       [ 6, 15]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.91      0.80      0.85        80\n       True       0.48      0.71      0.58        21\n\navg / total       0.82      0.78      0.80       101\n'}, 'SVM': {'name': 'SVM', 'best_estimator': SVC(C=10, cache_size=200, class_weight='balanced', coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=1, kernel='rbf',
  max_iter=-1, probability=True, random_state=None, shrinking=True,
  tol=0.001, verbose=False), 'best_score': 0.7910447761194029, 'conf_matrix': array([[74,  6],
       [20,  1]], dtype=int64), 'cla_report': '             precision    recall  f1-score   support\n\n      False       0.79      0.93      0.85        80\n       True       0.14      0.05      0.07        21\n\navg / total       0.65      0.74      0.69       101\n'}}, 'time_exec': 124.1502161026001}}